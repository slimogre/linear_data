/*----------------------------------------1er solution ex1----------------------------------------------------------------------------*/
ALGORITHM Linear_Data_Structures_Project_solution1
VAR
    sum, sum1, sum2 : INTEGER := 0;
    tab1 : ARRAY_OF INTEGER[5];
    tab2 : ARRAY_OF INTEGER[5];
    found : BOOLEAN;
BEGIN

    FOR i FROM 1 TO tab1.length STEP 1  DO

    found:=false;

        FOR j FROM 1 TO tab2.length STEP 1  DO
            IF (tab1[i] = tab2[j]) THEN
            found:=true;
        END_FOR
    
        IF (found=false) THEN
            sum1 := sum1 + tab1[i];
        END_IF

    END_FOR  

    FOR i FROM 1 TO tab2.length STEP 1  DO

    found:=false;
    
        FOR j FROM 1 TO tab1.length STEP 1  DO
            IF (tab2[i] = tab1[j]) THEN
            found:=true;
        END_FOR
    
        IF (found=false) THEN
            sum2 := sum2 + tab2[i];
        END_IF

    END_FOR            

    sum := sum1 + sum2;        
    Write("Output: ", sum);
END

/*----------------------------------------2éme solution ex1----------------------------------------------------------------------------*/

ALGORITHM Linear_Data_Structures_Project_solution2
VAR
    htab : HASH_TABLE<INTEGER,INTEGER>;
    sum: INTEGER := 0;
    tab1 : ARRAY_OF INTEGER[5];
    tab2 : ARRAY_OF INTEGER[5]; 
    tab_item : ARRAY_OF INTEGER[10];
BEGIN
    FOR i FROM 0 TO tab1.length STEP 1  DO
        htab.insert(tab1[i],1);
    END_FOR
        
    FOR i FROM 0 TO tab2.length-1 STEP 1  DO
        
        IF (htab.lookup(tab2[i]=true)) THEN
            htab.insert(tab2[i],2);
        ELSE
            htab.insert(tab2[i],1); 
        END_IF

    END_FOR

    FOR i FROM 0 TO tab1.length-1 STEP 1  DO
        IF (htab.get(tab1[i]=1)) THEN
            sum := sum+ tab1[i];
        END_IF
    END_FOR

    FOR i FROM 0 TO tab2.length-1 STEP 1  DO
        IF (htab.get(tab2[i]=1)) THEN
            sum := sum+ tab2[i];
        END_IF
    END_FOR

     Write("Output: ", sum);
END
/*----------------------------------------1ére solution ex2----------------------------------------------------------------------------*/

ALGORITHM problem2-solution1
VAR
    tab1,tab2 : ARRAY_OF INTEGER[20];
    i,j : INTEGER;
    sum : INTEGER :=  0;
    search : BOOLEAN;
BEGIN
    

    FOR i FROM 0 TO tab1.length-1 DO
        search := FALSE;
        FOR j FROM 0 TO set2.length-1 DO
            IF(tab1[i] = tab2[j]) THEN
                search := TRUE;
                BREAK;
            END
        END_FOR
        IF (search) THEN
            sum := sum + tab1[i]*2;
        END_IF
    END_FOR

    Write(sum);
END
/*----------------------------------------2éme solution ex2----------------------------------------------------------------------------*/
LGORITHM better_approach
VAR
    set1,set2 : ARRAY_OF INTEGER[20];
    set_keys : ARRAY_OF INTEGER[40];
    dict := HASH_TABLE<INTEGER,INTEGER>;
    i, count : INTEGER;
    sum : INTEGER := 0;
BEGIN
    

    FOR i FROM 0 TO set1.length -1 STEP 1  DO
        IF (dict.lookup(set1[i]) = TRUE) THEN
            count := dict.get(set1[i]);
            dict.insert(set1[i],count+1);
        ELSE
            dict.insert(set1[i],1);
        END_IF
    END_FOR

    FOR i FROM 0 TO set2.length -1 STEP 1  DO
        IF (dict.lookup(set2[i]) = TRUE) THEN
            count := dict.get(set2[i]);
            dict.insert(set2[i],count+1);
        ELSE
            dict.insert(set2[i],1);
        END_IF
    END_FOR

    set_keys := dict.getKeys();
    FOR i FROM 0 TO set_keys.length -1 STEP 1  DO
        IF (dict.get(set_keys[i]) = 2) THEN
            sum := sum +set_keys[i];
        END_IF
    END_FOR

END
